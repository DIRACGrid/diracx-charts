apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "diracx.fullname" . }}
  labels:
    {{- include "diracx.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "diracx.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        checksum/settings: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        checksum/init-settings: {{ include (print $.Template.BasePath "/init-secrets/configmap.yaml") . | sha256sum }}
        checksum/entrypoint: {{ include (print $.Template.BasePath "/diracx-container-entrypoint.yaml") . | sha256sum }}
      labels:
        {{- include "diracx.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "diracx.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: cs-store-mount
          persistentVolumeClaim:
            claimName: pvc-cs-store
        {{- if and .Values.developer.enabled .Values.developer.pythonModulesToEditableInstall }}
        - name: diracx-code-mount
          persistentVolumeClaim:
            claimName: pvc-diracx-code
        {{- range $module := .Values.developer.pythonModulesToEditableInstall }}
        - name: {{ lower $module }}-editable-install
          emptyDir:
            sizeLimit: 5Mi
        {{- end }}
        {{- end }}
        - name: container-entrypoint
          configMap:
            name: diracx-container-entrypoint
        - name: signing-key-mount
          secret:
            secretName: diracx-token-signing-key
            items:
            - key: rsa256.key
              path: rsa256.key
        {{- if and .Values.developer.enabled .Values.developer.enableCoverage }}
        - name: coverage-data
          persistentVolumeClaim:
            claimName: pvc-coverage
        {{- end }}

      {{/* Define common volume mounts for reusability */}}
      {{- $commonVolumeMounts := list }}
      {{- $commonVolumeMounts = append $commonVolumeMounts (dict "mountPath" "/cs_store" "name" "cs-store-mount" "readOnly" false) }}
      {{- $commonVolumeMounts = append $commonVolumeMounts (dict "mountPath" "/signing-key" "name" "signing-key-mount" "readOnly" false) }}
      {{- $commonVolumeMounts = append $commonVolumeMounts (dict "mountPath" "/entrypoint.sh" "name" "container-entrypoint" "subPath" "entrypoint.sh") }}
      {{- if and .Values.developer.enabled .Values.developer.enableCoverage }}
      {{- $commonVolumeMounts = append $commonVolumeMounts (dict "mountPath" "/diracx-coveragerc" "name" "container-entrypoint" "subPath" "coveragerc") }}
      {{- $commonVolumeMounts = append $commonVolumeMounts (dict "mountPath" "/coverage-reports" "name" "coverage-data" "readOnly" false) }}
      {{- end }}
      {{- if and .Values.developer.enabled .Values.developer.pythonModulesToEditableInstall }}
      {{- $commonVolumeMounts = append $commonVolumeMounts (dict "mountPath" .Values.developer.sourcePath "name" "diracx-code-mount" "readOnly" true) }}
      {{- range $module := .Values.developer.pythonModulesToEditableInstall }}
      {{- $commonVolumeMounts = append $commonVolumeMounts (dict "mountPath" (printf "%s/%s/src/%s.egg-info" $.Values.developer.sourcePath $module $module) "name" (printf "%s-editable-install" (lower $module)) "readOnly" false) }}
      {{- end }}
      {{- end }}

      initContainers:
      {{- if .Values.diracx.manageOSIndices }}
      - name: create-os-db-indices
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        command: ["bash", "/entrypoint.sh"]
        args: ["python", "-m", "diracx.db", "init-os"]
        volumeMounts: {{ toYaml $commonVolumeMounts | nindent 10 }}
        envFrom:
          - secretRef:
              name: diracx-init-os-secrets
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.diracx.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /api/docs/
              port: http
          readinessProbe:
            httpGet:
              path: /api/docs/
              port: http
          command: ["bash", "/entrypoint.sh"]
          args:
            - uvicorn
            - --factory
            - diracx.routers:create_app
            - --host=0.0.0.0
            - --port=8000
            - "--proxy-headers"
            - "--forwarded-allow-ips=*"
          {{- if and .Values.developer.enabled .Values.developer.autoReload }}
            - "--reload"
            {{- if .Values.developer.pythonModulesToEditableInstall }}
            - "--reload-dir={{ .Values.developer.sourcePath }}"
            {{- end }}
          {{- end }}
          volumeMounts: {{ toYaml $commonVolumeMounts | nindent 12 }}
          envFrom:
            # - configMapRef:
            #     name: diracx-env-config
            - secretRef:
                name: diracx-secrets
            {{- if and .Values.mysql.enabled .Values.diracx.mysqlDatabases }}
            - secretRef:
                name: diracx-sql-connection-urls
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
