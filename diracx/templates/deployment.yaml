apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "diracx.fullname" . }}
  labels:
    {{- include "diracx.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "diracx.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "diracx.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "diracx.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: cs-store-mount
          {{- if and (.Values.developer.enabled) (.Values.developer.localCSPath) }}
          persistentVolumeClaim:
            claimName: pvc-cs-store
          {{- else }}
          emptyDir:
          sizeLimit: 5Mi
          {{- end }}
        - name: diracx-code-mount
          persistentVolumeClaim:
            claimName: pvc-diracx-code
        - name: signing-key-mount
          emptyDir:
          sizeLimit: 5Mi
      initContainers:
      - name: init-cs
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        command: [/dockerMicroMambaEntrypoint.sh]
        args:
          - "dirac"
          - "internal"
          - "generate-cs"
          - "/cs_store/initialRepo"
          - "--vo=diracAdmin"
          - "--user-group=admin"
          - "--idp-url={{ .Values.dex.config.issuer }}"
          {{- with (first .Values.dex.config.staticClients) }}
          - "--idp-client-id={{ .id }}"
          {{- end }}
        volumeMounts:
            - mountPath: /cs_store
              name: cs-store-mount
              readOnly: false
      - name: init-cs-user
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        command: [/dockerMicroMambaEntrypoint.sh]
        args:
          - "dirac"
          - "internal"
          - "add-user"
          - "/cs_store/initialRepo"
          - "--vo=diracAdmin"
          - "--user-group=admin"
          - "--sub=EgVsb2NhbA"
        volumeMounts:
            - mountPath: /cs_store
              name: cs-store-mount
              readOnly: false
      - name: init-signing-key
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        command: [/dockerMicroMambaEntrypoint.sh]
        args:
          - "ssh-keygen"
          - "-P"
          - ""
          - "-trsa"
          - "-b4096"
          - "-mPEM"
          - "-f/signing-key/rs256.key"
        volumeMounts:
            - mountPath: /signing-key/
              name: signing-key-mount
              readOnly: false
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /docs/
              port: http
          readinessProbe:
            httpGet:
              path: /docs/
              port: http
          {{- if .Values.developer.enabled }}
          args:
            {{- range $moduleName := .Values.developer.modulesToMount }}
            - "--reload-dir={{ $.Values.developer.pythonSitePackagesDir }}/{{ $moduleName }}"
            {{- end }}
            - "--reload"
            - "--proxy-headers"
          {{- end }}

          volumeMounts:
            - mountPath: /cs_store
              name: cs-store-mount
              readOnly: true
            - mountPath: /signing-key/
              name: signing-key-mount
              readOnly: true
            {{- range $moduleName := .Values.developer.modulesToMount }}
            - mountPath: {{ $.Values.developer.pythonSitePackagesDir }}/{{ $moduleName }}
              name: diracx-code-mount
              readOnly: true
              subPath: {{ $moduleName }}
            {{- end }}
          envFrom:
          # - configMapRef:
          #     name: diracx-env-config
          - secretRef:
              name: diracx-secrets
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
