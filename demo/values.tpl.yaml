global:
  # Override the imagePullPolicy to always so we can using latest image tags
  # without risking them being outdated.
  imagePullPolicy: Always
  # Keep the job log for 1h for investigations
  batchJobTTL: 3600

developer:
  enabled: true
  urls:
    diracx: https://{{ hostname }}:8000
    minio: http://{{ hostname }}:32000
    dex: http://{{ hostname }}:32002
    iam: http://{{ hostname }}:32003
    grafana: http://{{ hostname }}:32004
  demoDir: {{ demo_dir }}
  mountedPythonModulesToInstall: {{ mounted_python_modules }}
  editableMountedPythonModules: {{ editable_mounted_modules }}
  mountedNodeModuleToInstall: {{ node_module_to_mount }}
  nodeWorkspacesDirectories: {{ node_module_workspaces }}

diracx:
  hostname: {{ hostname }}
  settings:
    DIRACX_SERVICE_AUTH_TOKEN_ISSUER: "https://{{ hostname }}:8000"
    DIRACX_CONFIG_BACKEND_URL: "git+file:///cs_store/initialRepo"
    DIRACX_SERVICE_AUTH_ALLOWED_REDIRECTS: '["https://{{ hostname }}:8000/api/docs/oauth2-redirect", "https://{{ hostname }}:8000/#authentication-callback"]'
    DIRACX_SANDBOX_STORE_BUCKET_NAME: demo-sandboxes
    DIRACX_SANDBOX_STORE_S3_CLIENT_KWARGS: '{"endpoint_url": "http://{{ hostname }}:32000", "aws_access_key_id": "console", "aws_secret_access_key": "console123"}'
    DIRACX_SANDBOX_STORE_AUTO_CREATE_BUCKET: "true"
    DIRACX_OTEL_ENABLED: "{{ open_telemetry }}"
    DIRACX_OTEL_GRPC_ENDPOINT: "diracx-demo-opentelemetry-collector:4317"
    DIRACX_OTEL_GRPC_INSECURE: "true"
    DIRACX_SERVICE_AUTH_ACCESS_TOKEN_EXPIRE_MINUTES: "120"
    DIRACX_SERVICE_AUTH_REFRESH_TOKEN_EXPIRE_MINUTES: "360"
  sqlDbs:
    dbs:
      AuthDB:
      JobDB:
      JobLoggingDB:
      SandboxMetadataDB:
      TaskQueueDB:
      PilotAgentsDB:
  osDbs:
    dbs:
      JobParametersDB:
      PilotLogsDB:

minio:
  environment:
    MINIO_BROWSER_REDIRECT_URL: http://{{ hostname }}:32001/

dex:
  config:
    issuer: http://{{ hostname }}:32002

    staticClients:
      - id: {{ dex_client_uuid }}
        public: true
        name: "CLI app"
        redirectURIs:
          - "https://{{ hostname }}:8000/api/auth/device/complete"
          - https://{{ hostname }}:8000/api/auth/authorize/complete

    staticPasswords:
      - email: "admin@example.com"
        # bcrypt hash of the string "password"
        # htpasswd -bnBC 10 "" "password" | tr -d ':\n'
        hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
        username: "admin"
        userID: {{ dex_admin_uuid }}

indigoiam:
  config:
    issuer: http://{{ hostname }}:32003

    admin_user:
      username: admin
      password: password
    initial_client:
      name: "Admin client (read-write)"
      id: admin-client-rw
      secret: secret

    users:
      - username: jane_doe
        given_name: Jane
        family_name: Doe
        password: password

    clients:
      - name: "Test client"
        id: client
        grant_types:
          - refresh_token
          - authorization_code
          - urn:ietf:params:oauth:grant-type:device_code
        scope:
          - offline
          - openid
          - profile
        redirect_uris:
          - https://{{ hostname }}:8000/api/auth/device/complete
          - https://{{ hostname }}:8000/api/auth/authorize/complete

    groups:
      dirac:
        user: [jane_doe]

## Open telemetry

opentelemetry-collector:
  enabled: {{ open_telemetry }}

elasticsearch:
  enabled: {{ open_telemetry }}

jaeger:
  enabled: {{ open_telemetry }}

grafana:
  enabled: {{ open_telemetry }}

prometheus:
  enabled: {{ open_telemetry }}
###
