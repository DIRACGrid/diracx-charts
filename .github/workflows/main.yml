name: Basic Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master


defaults:
  run:
    shell: bash -el {0}

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-python@v5
      with:
        python-version: 3.x
    - uses: pre-commit/action@v3.0.1
    - uses: pre-commit-ci/lite-action@v1.1.0
      if: always()

  run-demo:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Start demo
      run: |
        ./run_demo.sh --exit-when-done
    - name: Debugging information
      run: |
        export KUBECONFIG=$PWD/.demo/kube.conf
        .demo/kubectl get pods
        for pod_name in $(.demo/kubectl get pods -o json | jq -r '.items[] | .metadata.name' | grep -vE '(dex|minio|mysql|rabbitmq|opensearch)'); do
          echo "${pod_name}"
          .demo/kubectl describe pod/"${pod_name}" || true
          for container_name in $(.demo/kubectl get pods $pod_name -o jsonpath='{.spec.initContainers[*].name} {.spec.containers[*].name}'); do
            echo $pod_name $container_name
            .demo/kubectl logs "${pod_name}" -c "${container_name}" || true
          done
        done
    - name: Check for success
      run: |
        if [ ! -f ".demo/.success" ]; then
          echo "Demo failed"
          cat ".demo/.failed"
          exit 1
        fi

  # Same as run-demo except mount the sources inside the container
  run-demo-mount-sources:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Clone source
      run: |
        git clone https://github.com/DIRACGrid/diracx.git /tmp/diracx
        git clone https://github.com/DIRACGrid/DIRAC.git /tmp/DIRAC
        git clone https://github.com/DIRACGrid/diracx-web.git /tmp/diracx-web
    - name: Start demo
      run: |
        ./run_demo.sh --exit-when-done /tmp/diracx /tmp/DIRAC /tmp/diracx-web
    - name: Debugging information
      run: |
        export KUBECONFIG=$PWD/.demo/kube.conf
        .demo/kubectl get pods
        for pod_name in $(.demo/kubectl get pods -o json | jq -r '.items[] | .metadata.name' | grep -vE '(dex|minio|mysql|rabbitmq|opensearch)'); do
          echo "${pod_name}"
          .demo/kubectl describe pod/"${pod_name}" || true
          for container_name in $(.demo/kubectl get pods $pod_name -o jsonpath='{.spec.initContainers[*].name} {.spec.containers[*].name}'); do
            echo $pod_name $container_name
            .demo/kubectl logs "${pod_name}" -c "${container_name}" || true
          done
        done
    - name: Check for success
      run: |
        if [ ! -f ".demo/.success" ]; then
          echo "Demo failed"
          cat ".demo/.failed"
          exit 1
        fi
